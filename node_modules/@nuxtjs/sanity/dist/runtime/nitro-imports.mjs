import { defu } from "defu";
import { useRuntimeConfig } from "#imports";
import { createClient } from "#sanity-client";
const clients = {};
const $config = useRuntimeConfig();
const createSanityHelper = (options) => {
  const config = { ...options };
  let client = createClient(config);
  return {
    client,
    config,
    fetch: (...args) => client.fetch(...args),
    setToken(token) {
      config.token = token;
      client = createClient(config);
    }
  };
};
export const useSanity = (client = "default") => {
  if (client in clients) {
    return clients[client];
  }
  const { additionalClients = {}, ...options } = defu($config.sanity, $config.public.sanity);
  if (client === "default") {
    clients.default = createSanityHelper(options);
    return clients.default;
  }
  clients[client] = createSanityHelper(defu(additionalClients[client], options));
  return clients[client];
};
